# Puerto (Render lo ignora, util en local)
server.port=8080

# Conexion a PostgreSQL (Render define DATABASE_URL, USER y PASSWORD en el entorno)
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USER}
spring.datasource.password=${DATABASE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA / Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Recursos estaticos
spring.web.resources.static-locations=classpath:/static/

# HikariCP (optimizado para Supabase gratuito / pooler)
spring.datasource.hikari.pool-name=HikariPool
spring.datasource.hikari.maximum-pool-size=1
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.idle-timeout=10000
spring.datasource.hikari.connection-timeout=15000
spring.datasource.hikari.max-lifetime=30000
spring.datasource.hikari.leak-detection-threshold=15000
spring.datasource.hikari.auto-commit=true

# Evita errores con prepared statements (problemas comunes en Supabase pooler)
spring.datasource.hikari.data-source-properties.rewriteBatchedStatements=true
spring.datasource.hikari.data-source-properties.prepareThreshold=0
spring.datasource.hikari.data-source-properties.useServerPrepareStatement=false

